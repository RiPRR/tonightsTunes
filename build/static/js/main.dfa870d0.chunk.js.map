{"version":3,"sources":["components/Autocomplete.js","components/Track.js","components/Filters.js","components/Connect.js","components/Input.js","components/Heading.js","util/hash.js","index.js"],"names":["Autocomplete","props","onChange","e","suggestions","Object","values","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onKeyDown","state","keyCode","length","suggestionsListComponent","this","className","map","index","key","class","type","placeholder","Component","defaultProps","Track","useState","isPlaying","setPlaying","setType","handleTrackClick","handleMouseover","handlePlay","console","log","primaryColor","secondaryColor","styles","StyleSheet","create","detailColor","color","fadeIn","animationName","animationDuration","none","play","pause","style","backgroundColor","borderBottom","src","art","alt","audio","name","artist","duration","target","href","link","css","venue","date","location","Filters","opened","setOpened","setLocation","dropdown","setDropdown","useEffect","container","display","flexDirection","justifyContent","alignItems","width","marginBottom","maxWidth","settings","maxHeight","overflow","transition","borderRadius","fontFamily","letterSpacing","shuffle","fontWeight","fontSize","marginTop","outline","select","marginLeft","textAlign","where","count","marginRight","iconDiv","instList","extList","li","emphasis","howTo","handleClick","clicked","getAttribute","setTimeout","changeSort","changeTime","size","updateSize","min","max","goBack","Connect","login","a","token","uris","getUserOptions","method","headers","createPlaylistData","public","description","updatePlaylistData","playlistCreateOptions","body","JSON","stringify","playlistUpdateOptions","fetch","res","json","userInfo","user_id","id","res2","playlistInfo","setAdded","external_urls","playlist_id","res3","complete","nothing","bounceOutLeft","jello","padding","Input","animation","setAnimation","v","setV","tracks","setTracks","Audio","audioPlayer","selectedTrack","setSelectedTrack","loading","setLoading","sortType","setSortType","time","setTime","setSize","badLocation","setBadLocation","setUris","added","fetchTracks","data","span","requestOptions","then","response","processData","err","newTracks","trackUris","counter","shuffledEvents","events","obj","millisToMinutesAndSeconds","push","track","event","uri","sortTracks","popularSort","b","aPop","popularity","dateSort","Date","Number","input","sortedTracks","sort","trackNum","newSource","millis","minutes","Math","floor","seconds","toFixed","rgbToHex","r","g","x","hex","toString","join","j","i","random","formatDate","dateStr","hours","getHours","getMinutes","ampm","strTime","getMonth","getDate","noTracks","createTracks","selected","venueLink","colors","onSubmit","preventDefault","accessToken","playLink","Heading","cursor","hash","window","substring","split","reduce","initial","item","parts","decodeURIComponent","App","setToken","setAccessToken","access_token","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dfa870d0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nclass Autocomplete extends Component {\r\n    static propTypes = {\r\n        suggestions: PropTypes.instanceOf(Object)\r\n    };\r\n\r\n    static defaultProps = {\r\n        suggestions: []\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            // The active selection's index\r\n            activeSuggestion: 0,\r\n            // The suggestions that match the user's input\r\n            filteredSuggestions: [],\r\n            // Whether or not the suggestion list is shown\r\n            showSuggestions: false,\r\n            // What the user has entered\r\n            userInput: \"\"\r\n        };\r\n    }\r\n\r\n    onChange = e => {\r\n\r\n        let suggestions = Object.values(this.props.suggestions)\r\n        // const suggestions = this.props.suggestions;\r\n        const userInput = e.currentTarget.value;\r\n\r\n        // Filter our suggestions that don't contain the user's input\r\n        const filteredSuggestions = suggestions.filter(\r\n            suggestion =>\r\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\r\n        );\r\n\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions,\r\n            showSuggestions: true,\r\n            userInput: e.currentTarget.value\r\n        });\r\n    };\r\n\r\n    onClick = e => {\r\n        this.setState({\r\n            activeSuggestion: 0,\r\n            filteredSuggestions: [],\r\n            showSuggestions: false,\r\n            userInput: e.currentTarget.innerText\r\n        });\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n        // User pressed the enter key\r\n        if (e.keyCode === 13) {\r\n            this.setState({\r\n                activeSuggestion: 0,\r\n                showSuggestions: false,\r\n                userInput: filteredSuggestions[activeSuggestion]\r\n            });\r\n        }\r\n        // User pressed the up arrow\r\n        else if (e.keyCode === 38) {\r\n            if (activeSuggestion === 0) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n        }\r\n        // User pressed the down arrow\r\n        else if (e.keyCode === 40) {\r\n            if (activeSuggestion - 1 === filteredSuggestions.length) {\r\n                return;\r\n            }\r\n\r\n            this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            onChange,\r\n            onClick,\r\n            onKeyDown,\r\n            state: {\r\n                activeSuggestion,\r\n                filteredSuggestions,\r\n                showSuggestions,\r\n                userInput\r\n            }\r\n        } = this;\r\n\r\n        let suggestionsListComponent;\r\n\r\n        if (showSuggestions && userInput) {\r\n            if (filteredSuggestions.length) {\r\n                suggestionsListComponent = (\r\n                    <ul className=\"suggestions\">\r\n                        {filteredSuggestions.map((suggestion, index) => {\r\n                            let className;\r\n\r\n                            // Flag the active suggestion with a class\r\n                            if (index === activeSuggestion) {\r\n                                className = \"suggestion-active\";\r\n                            }\r\n\r\n                            return (\r\n                                <li className={className} key={suggestion} onClick={onClick}>\r\n                                    {suggestion}\r\n                                </li>\r\n                            );\r\n                        })}\r\n                    </ul>\r\n                );\r\n            } else {\r\n                suggestionsListComponent = (\r\n                    <div class=\"no-suggestions\">\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        return (\r\n            <Fragment >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder='NY'\r\n                    onChange={onChange}\r\n                    onKeyDown={onKeyDown}\r\n                    value={userInput}\r\n                    placeholder=''\r\n                    className='stateInput'\r\n                />\r\n                <div className='sug'>\r\n                    {suggestionsListComponent}\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Autocomplete;\r\n\r\n","import React, { useState } from 'react';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport { fadeIn } from 'react-animations';\r\nlet Track = (props) => {\r\n    const [isPlaying, setPlaying] = useState(false)\r\n    const [type, setType] = useState(true)\r\n    const handleTrackClick = e => {\r\n        setType(!type)\r\n    }\r\n    const handleMouseover = e => {\r\n        props.handleMouseover(props.index)\r\n    }\r\n    const handlePlay = () => {\r\n        console.log(isPlaying)\r\n        setPlaying(!isPlaying)\r\n    }\r\n    const handleMouseEnter = () => {\r\n        console.log('enetered')\r\n    }\r\n    const handleMouseLeave = () => {\r\n        console.log('left')\r\n    }\r\n    const primaryColor = props.primaryColor\r\n    const secondaryColor = props.secondaryColor\r\n    const styles = StyleSheet.create({\r\n        detailColor: {\r\n            color: props.detailColor\r\n        },\r\n        fadeIn: {\r\n            animationName: fadeIn,\r\n            animationDuration: '1s',\r\n        },\r\n        none: {}\r\n    })\r\n    const play = \"fas fa-play fa-2x playBttn\"\r\n    const pause = \"fas fa-pause fa-2x pauseBttn\"\r\n    if (type === true) {\r\n        return (\r\n            <div className='track' style={{ backgroundColor: primaryColor, borderBottom: 'solid ' + primaryColor }}>\r\n                <div className={'albumArt hvr-grow'} onClick={handlePlay}>\r\n                    <img src={props.art} alt='bah' className='albumArt' onClick={handleMouseover} />\r\n                    {props.audio ? <i onClick={handleMouseover} style={{ color: '#C0C8E2' }} className={isPlaying ? pause : play}></i> : null}\r\n                </div>\r\n                <div className='trackInfo' onClick={handleTrackClick} style={{ color: secondaryColor }}>\r\n                    <h4 className='trackName'>{props.name}</h4>\r\n                    <div className='trackName2'>\r\n                        <p className='trackArtist'>{props.artist}</p>\r\n                        <p className='trackLength'>{props.duration}</p>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='track' style={{ backgroundColor: primaryColor, borderBottom: 'solid ' + primaryColor }}>\r\n                <div className='albumArt hvr-grow' onClick={handlePlay}>\r\n                    <img src={props.art} alt='bah' className='albumArt' onClick={handleMouseover} />\r\n                    {props.audio ? <i onClick={handleMouseover} style={{ color: '#C0C8E2' }} className={isPlaying ? pause : play}></i> : null}\r\n                </div>\r\n                <div className='eventInfo' onClick={handleTrackClick} style={{ color: secondaryColor }}>\r\n                    <p className='info overflow'><a style={{ color: props.detailColor }} target=\"_blank\" href={props.link} className='eventlink'><b className={css(styles.detailColor)}>{props.artist}</b> @ <b className={css(styles.detailColor)}>{props.venue}</b></a></p>\r\n                    <p className='info overflow'><b className={css(styles.detailColor)}>{props.date}</b> in <b className={css(styles.detailColor)}>{props.location}</b></p>\r\n                </div >\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Track","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nlet Filters = (props) => {\r\n    let [opened, setOpened] = useState('0px')\r\n    let [location, setLocation] = useState(null)\r\n    let [dropdown, setDropdown] = useState('settings')\r\n    useEffect(() => {\r\n        setLocation(props.location)\r\n    }, []);\r\n    const styles = StyleSheet.create({\r\n        container: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            width: '100%',\r\n            marginBottom: '20px',\r\n            maxWidth: '500px',\r\n        },\r\n        settings: {\r\n            maxHeight: opened,\r\n            overflow: 'hidden',\r\n            transition: 'all 3s ease',\r\n            display: 'flex',\r\n            flexDirection: \"column\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: '100%',\r\n            backgroundColor: '#63585E',\r\n            borderRadius: '20px',\r\n        },\r\n        filter: {\r\n            display: 'flex',\r\n            flexDirection: 'row',\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            fontFamily: 'Roboto',\r\n            color: '#C0C8E2',\r\n            letterSpacing: '5px'\r\n        },\r\n        shuffle: {\r\n            fontFamily: 'Roboto',\r\n            fontWeight: 'bold',\r\n            color: '#63585E',\r\n            borderRadius: '10px',\r\n            fontSize: '20pt',\r\n            letterSpacing: '2px',\r\n            marginBottom: '20px',\r\n            marginTop: '20px',\r\n            backgroundColor: '#C0C8E2',\r\n            outline: 'none',\r\n        },\r\n        select: {\r\n            fontFamily: 'Roboto',\r\n            borderRadius: '2px',\r\n            marginLeft: '10px',\r\n            backgroundColor: '#C0C8E2',\r\n            color: '#63585E',\r\n            fontWeight: 'bold',\r\n            fontSize: '17pt',\r\n            textAlign: 'center'\r\n        },\r\n        where: {\r\n            fontFamily: 'Roboto',\r\n            borderRadius: '2px',\r\n            marginLeft: '10px',\r\n            backgroundColor: '#C0C8E2',\r\n            color: '#63585E',\r\n            fontWeight: 'bold',\r\n            fontSize: '17pt',\r\n            textAlign: 'center',\r\n            width: '200px',\r\n        },\r\n        count: {\r\n            fontFamily: 'Roboto',\r\n            borderRadius: '2px',\r\n            marginLeft: '5px',\r\n            marginRight: '8px',\r\n            backgroundColor: '#C0C8E2',\r\n            color: '#63585E',\r\n            fontWeight: 'bold',\r\n            fontSize: '17pt',\r\n            textAlign: 'center',\r\n            width: '45px',\r\n        },\r\n        iconDiv: {\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            width: '80%'\r\n        },\r\n        instList: {\r\n            fontFamily: 'Roboto',\r\n            color: '#C0C8E2'\r\n        },\r\n        extList: {\r\n            fontFamily: 'Roboto',\r\n            color: '#DF2935',\r\n        },\r\n        li: {\r\n            marginBottom: '8px',\r\n            fontSize: '13pt'\r\n        },\r\n        emphasis: {\r\n            color: 'white',\r\n        },\r\n        howTo: {\r\n            fontFamily: 'Roboto',\r\n            color: '#C0C8E2'\r\n        }\r\n\r\n\r\n    })\r\n\r\n    const handleClick = (e) => {\r\n        let clicked = e.target.getAttribute('name')\r\n        if (dropdown !== clicked) {\r\n            setOpened(\"0px\")\r\n            setTimeout(function () {\r\n                setDropdown(clicked)\r\n                setOpened(\"500px\")\r\n            }, 2500);\r\n        }\r\n        else {\r\n            setDropdown(clicked)\r\n            if (opened === '0px') {\r\n                setOpened(\"500px\")\r\n            }\r\n            else {\r\n                setOpened(\"0px\")\r\n            }\r\n        }\r\n    }\r\n    const changeSort = (e) => {\r\n        props.changeSort(e)\r\n    }\r\n    const changeTime = (e) => {\r\n        props.changeTime(e)\r\n    }\r\n    const updateSize = (e) => {\r\n        props.updateSize(e.target.value)\r\n    }\r\n    const updateLocation = (e) => {\r\n        setLocation(e.target.value)\r\n    }\r\n    const shuffle = () => {\r\n        props.shuffle(location)\r\n    }\r\n    if (dropdown == 'settings') {\r\n\r\n        return (\r\n            <div className={css(styles.container)}>\r\n                <div className={css(styles.iconDiv)}>\r\n                    <i className=\"fas fa-sync-alt fa-2x settingsIco\" onClick={shuffle}></i>\r\n                    <i className=\"fas fa-cog fa-2x settingsIco\" name='settings' onClick={handleClick}></i>\r\n                    <i className=\"fas fa-question-circle fa-2x settingsIco\" name='info' onClick={handleClick}></i>\r\n                </div>\r\n                <div className={css(styles.settings)}>\r\n                    <div className={css(styles.filter)}>\r\n                        <h2>sort by?</h2>\r\n                        <select onChange={changeSort} className={css(styles.select)}>\r\n                            <option>nothing</option>\r\n                            <option>popularity</option>\r\n                            <option>date</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={css(styles.filter)}>\r\n                        <h2>when?</h2>\r\n                        <select onChange={changeTime} className={css(styles.select)}>\r\n                            <option>tonight</option>\r\n                            <option>this week</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className={css(styles.filter)}>\r\n                        <h2>how many?</h2>\r\n                        <input className={css(styles.count)} placeholder={props.size} onChange={updateSize} onKeyDown={() => { return false }} type=\"number\" min=\"1\" max=\"50\"></input>\r\n                    </div>\r\n                    <div className='filterBttnDiv'>\r\n                        <button className='goBackBttn2' onClick={props.goBack}>go back</button>\r\n                        <button onClick={shuffle} className={css(styles.shuffle)}>apply filters</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className={css(styles.container)}>\r\n                <div className={css(styles.iconDiv)}>\r\n                    <i className=\"fas fa-sync-alt fa-2x settingsIco\" onClick={shuffle}></i>\r\n                    <i className=\"fas fa-cog fa-2x settingsIco\" name='settings' onClick={handleClick}></i>\r\n                    <i className=\"fas fa-question-circle fa-2x settingsIco\" name='info' onClick={handleClick}></i>\r\n                </div>\r\n                <div className={css(styles.settings)}>\r\n                    <h2 className={css(styles.howTo)}>HOW TO USE</h2>\r\n                    <ul className={css(styles.instList)}>\r\n                        <li className={css(styles.li)}>click <i className={css(styles.emphasis)}>right side</i> of track to toggle between event & track info</li>\r\n                        <li className={css(styles.li)}>click <i className={css(styles.emphasis)}>album art</i> to play a sample of the track</li>\r\n                        <li className={css(styles.li)}>connecting to spotify is strongly reccomended as it will allow you to save the playlist along with access to future features</li>\r\n                    </ul>\r\n                    <ul className={css(styles.extList)}>\r\n                        <li>\r\n                            Due to COVID-19 many, if not all events and concerts\r\n                            have been canceled. In order to maintain functionality,\r\n                            canceled events have been temporarily allowed in the results.\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n/*\r\n<div className={css(styles.filter)}>\r\n    <h2>where?</h2>\r\n    <input onChange={updateLocation} placeholder={location ? location : location} className={css(styles.where)}>\r\n    </input>\r\n</div>\r\n*/\r\n\r\n\r\nexport default Filters","import React, { useState, useEffect } from 'react';\r\nlet Connect = (props) => {\r\n    let login = async () => {\r\n        let token = props.token\r\n        console.log(props.uris)\r\n        const getUserOptions = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            }\r\n        };\r\n        let createPlaylistData = {\r\n            name: \"Music near __ + date\",\r\n            public: false,\r\n            description: 'a playlist generated by Whip!'\r\n        }\r\n        let updatePlaylistData = {\r\n            'uris': props.uris\r\n        }\r\n        const playlistCreateOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(createPlaylistData)\r\n        };\r\n        const playlistUpdateOptions = {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${token}`\r\n            },\r\n            body: JSON.stringify(updatePlaylistData)\r\n        };\r\n\r\n        let res = await fetch('https://api.spotify.com/v1/me', getUserOptions)\r\n        let userInfo = await res.json()\r\n        let user_id = userInfo.id\r\n        let res2 = await fetch(`https://api.spotify.com/v1/users/${user_id}/playlists`, playlistCreateOptions)\r\n        let playlistInfo = await res2.json()\r\n        console.log(playlistInfo)\r\n        props.setAdded(playlistInfo.external_urls['spotify'])\r\n        let playlist_id = playlistInfo.id\r\n        let res3 = await fetch(`https://api.spotify.com/v1/playlists/${playlist_id}/tracks`, playlistUpdateOptions)\r\n        let complete = await res3.json()\r\n        console.log(complete)\r\n\r\n        /*\r\n        popup.close()\r\n        fetch('https://api.spotify.com/v1/me/top/artists', {\r\n            headers: {\r\n                'Authorization': `Bearer ${payload}`\r\n            }\r\n        }).then(response => {\r\n            return response.json()\r\n        }).then(data => {\r\n            //output data\r\n            console.log(data)\r\n            setArtists(data)\r\n        })\r\n        */\r\n\r\n    }\r\n    return (\r\n        <h3 className='connectBttn' onClick={login}><img className='spotifyico' src='/spotifyico.png' />add playlist to spotify</h3>\r\n    )\r\n}\r\nexport default Connect","import React, { useState, useEffect } from 'react';\r\nimport { StyleSheet, css } from 'aphrodite';\r\nimport { bounceOutLeft } from 'react-animations';\r\nimport { jello } from 'react-animations';\r\nimport Autocomplete from \"./Autocomplete\";\r\nimport Track from './Track.js'\r\nimport Filters from './Filters'\r\nimport Connect from './Connect.js'\r\n\r\nlet Input = (props) => {\r\n    const [animation, setAnimation] = useState(null)\r\n    const [v, setV] = useState(true)\r\n    const [tracks, setTracks] = useState([]);\r\n    const [audioPlayer] = useState(new Audio());\r\n    const [selectedTrack, setSelectedTrack] = useState(-1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [location, setLocation] = useState(null)\r\n    const [sortType, setSortType] = useState('random')\r\n    const [time, setTime] = useState('day')\r\n    const [size, setSize] = useState(20)\r\n    const [badLocation, setBadLocation] = useState(false)\r\n    const [uris, setUris] = useState([])\r\n    const [added, setAdded] = useState(false)\r\n\r\n    let locationSubmit = (e) => {\r\n        e.preventDefault()\r\n        setAnimation('bounceOutLeft')\r\n        setV(false)\r\n        setTimeout(function () {\r\n            setAnimation(null)\r\n        }, 900);\r\n        setLocation(e.target[0].value)\r\n        fetchTracks(e.target[0].value)\r\n    }\r\n\r\n    let fetchTracks = (location) => {\r\n        setLoading(true)\r\n        const token = props.token;\r\n        let data = {\r\n            token: token,\r\n            location: location,\r\n            span: time,\r\n        }\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(data)\r\n        };\r\n\r\n        fetch('http://localhost:3001/nearby', requestOptions)\r\n            .then(response => response.json())\r\n            .then(data => processData(data));\r\n\r\n        //console.log(testData)\r\n        //processData(testData)\r\n    }\r\n    const processData = async (data) => {\r\n        if (data.err) {\r\n            setBadLocation(true)\r\n            setV(true)\r\n            setLoading(false)\r\n        }\r\n        else {\r\n            setBadLocation(false)\r\n            let newTracks = []\r\n            let trackUris = []\r\n            let counter = 0\r\n            console.log(size)\r\n            console.log(counter)\r\n            let shuffledEvents = shuffle(data.events)\r\n            for (let obj of shuffledEvents) {\r\n                if (counter === size) {\r\n                    console.log('broke')\r\n                    break\r\n                }\r\n                if (obj.tracks) {\r\n                    if (obj.tracks[0]) {\r\n                        counter += 1\r\n                        obj.tracks[0].duration = millisToMinutesAndSeconds(obj.tracks[0].duration)\r\n                        newTracks.push({ track: obj.tracks[0], event: obj.event })\r\n                        trackUris.push(obj.tracks[0].uri)\r\n                    }\r\n                }\r\n            }\r\n            setUris(trackUris)\r\n            newTracks = await sortTracks(newTracks)\r\n            setTracks(newTracks)\r\n        }\r\n    }\r\n\r\n\r\n\r\n    const popularSort = (a, b) => {\r\n        let aPop = a.track.popularity + a.event.popularity\r\n        let bPop = b.track.popularity + b.event.popularity\r\n        return bPop - aPop\r\n    }\r\n\r\n    const dateSort = (a, b) => {\r\n        let aDate = new Date(a.event.date)\r\n        let bDate = new Date(b.event.date)\r\n        return aDate - bDate\r\n    }\r\n\r\n    const changeSort = (e) => {\r\n        setSortType(e.target.value)\r\n    }\r\n\r\n    const changeTime = (e) => {\r\n        let value = e.target.value\r\n        if (value === 'tonight') {\r\n            setTime('day')\r\n        }\r\n        else {\r\n            setTime('week')\r\n        }\r\n    }\r\n\r\n    const updateSize = (value) => {\r\n        value = Number(value)\r\n        if (value < 50 && value >= 1) {\r\n            setSize(value)\r\n        }\r\n        else (setSize(20))\r\n    }\r\n\r\n    const sortTracks = async (input) => {\r\n        setLoading(true)\r\n        setAdded(false)\r\n        let sortedTracks\r\n        if (input) { sortedTracks = input }\r\n        else { sortedTracks = tracks }\r\n        if (sortType === 'popularity') {\r\n            sortedTracks.sort(popularSort)\r\n        }\r\n        else if (sortType === 'date') {\r\n            sortedTracks.sort(dateSort)\r\n        }\r\n        if (!input) { setTracks(sortedTracks) }\r\n        setTimeout(function () {\r\n            setLoading(false)\r\n            setSortType('random')\r\n        }, 500);\r\n        return sortedTracks\r\n\r\n    }\r\n    const handleMouseover = (trackNum) => {\r\n        if (trackNum === selectedTrack) {\r\n            audioPlayer.pause();\r\n            setSelectedTrack(-1);\r\n        }\r\n        else {\r\n            const newSource = tracks[trackNum].track.audio;\r\n            //console.log(newSource)\r\n            if (newSource === null)\r\n                audioPlayer.pause();\r\n            else {\r\n                audioPlayer.src = newSource\r\n                audioPlayer.play()\r\n            }\r\n\r\n            setSelectedTrack(trackNum);\r\n        }\r\n    }\r\n\r\n    let shouldMove = () => {\r\n        if (animation) {\r\n            return true\r\n        }\r\n        else { return false }\r\n    }\r\n\r\n    const goBack = () => {\r\n        setV(true)\r\n        setSize(20)\r\n    }\r\n\r\n    //HELPERS\r\n\r\n\r\n    const millisToMinutesAndSeconds = millis => {\r\n        var minutes = Math.floor(millis / 60000);\r\n        var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n        return minutes + \":\" + (seconds < 10 ? '0' : '') + seconds;\r\n    }\r\n\r\n    const rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n        const hex = x.toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    }).join('')\r\n\r\n    function shuffle(a) {\r\n        var j, x, i;\r\n        for (i = a.length - 1; i > 0; i--) {\r\n            j = Math.floor(Math.random() * (i + 1));\r\n            x = a[i];\r\n            a[i] = a[j];\r\n            a[j] = x;\r\n        }\r\n        return a;\r\n    }\r\n\r\n    function formatDate(dateStr) {\r\n        let date = new Date(dateStr)\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let ampm = hours >= 12 ? 'pm' : 'am';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12; // the hour '0' should be '12'\r\n        minutes = minutes < 10 ? '0' + minutes : minutes;\r\n        let strTime = hours + ':' + minutes + ' ' + ampm;\r\n        return (date.getMonth() + 1) + \"/\" + date.getDate() + \" @ \" + strTime;\r\n    }\r\n\r\n    const classy = css(shouldMove() ? styles.bounceOutLeft : styles.nothing)\r\n    const noTracks = () => {\r\n        return (\r\n            <div className='noTracksDiv'>\r\n                <h1 className='noTracksMsg'>no tracks found 😔</h1>\r\n                <button className='goBackBttn' onClick={goBack}>go back</button>\r\n            </div>\r\n        )\r\n    }\r\n    const createTracks = () => {\r\n        return (<div className='tracks'>\r\n            {\r\n                tracks.map((obj, index) => (\r\n                    <Track\r\n                        key={index}\r\n                        index={index}\r\n                        artist={obj.track.artist}\r\n                        name={obj.track.name}\r\n                        link={obj.event.link}\r\n                        uri={obj.track.uri}\r\n                        duration={obj.track.duration}\r\n                        art={obj.track.art}\r\n                        selected={(index === selectedTrack) ? true : false}\r\n                        handleMouseover={handleMouseover}\r\n                        audio={obj.track.audio}\r\n                        venue={obj.event.venue ? obj.event.venue['name'] : '?'}\r\n                        venueLink={obj.event.venue ? obj.event.venue['link'] : '/'}\r\n                        date={obj.event.date ? formatDate(obj.event.date) : 'unknown date'}\r\n                        location={obj.event.location}\r\n                        primaryColor={rgbToHex(obj.track.colors[0][0], obj.track.colors[0][1], obj.track.colors[0][2])}\r\n                        secondaryColor={rgbToHex(obj.track.colors[1][0], obj.track.colors[1][1], obj.track.colors[1][2])}\r\n                        detailColor={rgbToHex(obj.track.colors[2][0], obj.track.colors[2][1], obj.track.colors[2][2])}\r\n                    />\r\n                ))\r\n            }\r\n        </div>);\r\n    }\r\n    if (v) {\r\n        return (\r\n            <div className='wrapper'>\r\n                <div className='locationDiv'>\r\n                    <form onSubmit={locationSubmit} className={classy, 'timmy'}>\r\n                        <input\r\n                            className='cityInput'\r\n                            placeholder='enter a city'\r\n                            suggestions={\r\n                                {\r\n                                    '7644': 'New York',\r\n                                    'N2393': 'New Yam'\r\n                                }\r\n                            }\r\n                        />\r\n                        <h3 className={'locNotFound', css(styles.jello)}>{badLocation ? '🤔city not found, try again🤔' : null}</h3>\r\n                    </form>\r\n                </div>\r\n                <h4 className='footer'>©2020 Ryan Rivera </h4>\r\n            </div>\r\n        )\r\n    }\r\n    else if (!loading && added) {\r\n        return (\r\n            <div className='trackContainer'>\r\n                <a className='playlistLink' href={added} target=\"_blank\"><h3 className='added' >🎉 playlist added here 🎉</h3></a>\r\n                <Filters goBack={goBack} updateSize={updateSize} size={size} location={location} changeTime={changeTime} changeSort={changeSort} shuffle={fetchTracks}></Filters>\r\n                {tracks.length ? null : noTracks()}\r\n                {loading ? null : createTracks()}\r\n            </div>\r\n        )\r\n    }\r\n    else if (!loading) {\r\n        return (\r\n            <div className='trackContainer'>\r\n                {props.accessToken ? <Connect setAdded={(playLink) => { setAdded(playLink) }} uris={uris} token={props.accessToken}></Connect> : null}\r\n                <Filters goBack={goBack} updateSize={updateSize} size={size} location={location} changeTime={changeTime} changeSort={changeSort} shuffle={fetchTracks}></Filters>\r\n                {tracks.length ? null : noTracks()}\r\n                {loading ? null : createTracks()}\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className='loading'>\r\n                <i style={{ color: '#63585E' }} className=\"fas fa-circle-notch fa-spin fa-2x\"></i>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    nothing: {},\r\n    bounceOutLeft: {\r\n        animationName: bounceOutLeft,\r\n        animationDuration: '1s',\r\n    },\r\n    jello: {\r\n        animationName: jello,\r\n        animationDuration: '1s',\r\n        fontFamily: 'Roboto',\r\n        color: '#C0C8E2',\r\n        padding: '5px',\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\nexport default Input","import React from 'react';\r\nlet Heading = (props) => {\r\n    let cursor = props.accessToken ? 'auto' : 'pointer'\r\n    return (\r\n        <div className='heading'>\r\n            <h1 className='title'>Whip</h1>\r\n            <h3 className='subTitle'>A playlist generator based on music near you</h3>\r\n            <div className=\"pwrDiv\">\r\n                <img className='songkickLogo' src='/songkicklogo.png'></img>\r\n                <div className='connectDiv'>\r\n                    <a href={props.accessToken ? null : props.link} className='authLink'><h2 className='spotifyBttn' style={{ cursor: cursor }} > <img className='spotifyico' src='/spotifyico.png' />{props.accessToken ? '✅' : 'connect spotify'}</h2></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Heading","const hash = window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce(function (initial, item) {\r\n        if (item) {\r\n            var parts = item.split(\"=\");\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n        }\r\n        return initial;\r\n    }, {});\r\nwindow.location.hash = \"\";\r\n\r\nexport default hash;","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport './css/hover-min.css';\r\nimport Input from './components/Input.js'\r\n//import Track from './components/Track.js'\r\nimport Heading from './components/Heading.js'\r\nimport hash from './util/hash'\r\n\r\nlet App = (props) => {\r\n    const [token, setToken] = useState(null);\r\n    const [accessToken, setAccessToken] = useState(null)\r\n    useEffect(() => {\r\n        fetch('http://localhost:3001/token')\r\n            .then(response => response.json())\r\n            .then(data => setToken(data.token));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let accessToken = hash.access_token;\r\n        if (accessToken) {\r\n            setAccessToken(accessToken);\r\n            console.log(accessToken);\r\n        }\r\n    }, []);\r\n\r\n    let client_id = '2a1e4b30a72b41feb5c432aed9877ccb'\r\n    let redirect_uri = 'http%3A%2F%2Flocalhost%3A3000'\r\n    let scopes = 'playlist-modify-private'\r\n    let link = `https://accounts.spotify.com/authorize?client_id=${client_id}&response_type=token&redirect_uri=${redirect_uri}&scope=${scopes}&show_dialog=true`\r\n\r\n    return (\r\n        <div className='app'>\r\n            <Heading accessToken={accessToken} link={link}></Heading>\r\n            <Input accessToken={accessToken} token={token}></Input>\r\n        </div >\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}